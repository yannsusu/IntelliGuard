{"type": "post", "text": "VS Code - dbt power user - increase query timeout in query results tool? Is there a way in vs code when using a sort of 'live' query for debugging to change the timeout setting?  120s is usually fine but I've got a slow running query that uses a remote python cloud function and it's a bit sluggish, but I would like to test it.  \n\nI can't find if or where that's a setting.  \n\nThis is just using the \"query results\" tab and \"+ new query\" button to scratch around, I think that's part of dbt power user at least.  But perhaps it's not actually part of that extension's feature set.\n\nAny ideas?", "author": "reelznfeelz", "time": "2025-03-28 20:49:55", "url": "https://www.reddit.com/r/dataengineering/comments/1jm5a4n/vs_code_dbt_power_user_increase_query_timeout_in/", "label": ""}
{"type": "post", "text": "Snowflake SQL Query, what am I doing wrong? I'm trying to query a table to find all instances where a character repeats at least 5 times in a row.\n\nI've tried:\n\n    Select Column\n    From Table\n    where Column REGEXP '(.)\\1{4,}'\n\nbut it returns nothing.\n\nThe table includes the following entries that SHOULD be returned:\n\n1.111111111111E31\n\n00000000000000000\n\nxxxxxxxxxxxxxxxxx\n\n\nEDIT: Apperently [Snowflake doesn't support backreferences](https://docs.snowflake.com/en/sql-reference/functions-regexp#using-backreferences). so I need to find a new way to accomplish the task.  Any ideas?", "author": "Luvs_to_drink", "time": "2025-03-28 17:16:22", "url": "https://www.reddit.com/r/SQL/comments/1jm08x0/snowflake_sql_query_what_am_i_doing_wrong/", "label": ""}
{"type": "comment", "text": "Without having a real clue or a snowflake instance to test this, but could it be that you need to escape the backslash? The docu goes into some length to explain escaping behavior here https://docs.snowflake.com/en/sql-reference/functions/regexp\n\n\nEdit: tested it with sql fiddle and MySQL, escaping the backslash did the trick:\n\nhttps://sqlfiddle.com/mysql/online-compiler?id=7a368593-33f3-4e52-b287-a321c6016a0b", "author": "GoingToSimbabwe", "time": "2025-03-28 17:56:42", "url": "https://www.reddit.com/r/SQL/comments/1jm08x0/snowflake_sql_query_what_am_i_doing_wrong/mk81202/", "label": ""}
{"type": "comment", "text": "Try this\n\n    SELECT\n        column\n    FROM\n        table\n    WHERE \n        REGEXP_LIKE(column,'.*(.)\\1{4}.*')", "author": "Sexy_Koala_Juice", "time": "2025-03-28 18:00:11", "url": "https://www.reddit.com/r/SQL/comments/1jm08x0/snowflake_sql_query_what_am_i_doing_wrong/mk81saz/", "label": ""}
{"type": "comment", "text": "As per your edit and backreferences not being supported:\n\nSorry no real specific idea, but googling around and landing on stack overflow mostly points to writing UDFs in JavaScript to get backreferen functionality. However I can’t tell you how those would look. \n\nP.e. Sources like this: \nhttps://snowflake.pavlik.us/index.php/2020/11/20/regex-non-capturing-groups-and-lookarounds-in-snowflake/", "author": "GoingToSimbabwe", "time": "2025-03-28 19:43:05", "url": "https://www.reddit.com/r/SQL/comments/1jm08x0/snowflake_sql_query_what_am_i_doing_wrong/mk8mgdd/", "label": ""}
{"type": "post", "text": "Weird bug with auth0 and docker. I need help, please. **How's it going, everyone?**\n\nI'm facing a big issue with React with Vite/TypeScript, Auth0, and Docker.  \nI'm building the image like this:\n\n    FROM node:18-alpine\n    \n    WORKDIR /app\n    \n    COPY package.json .\n    \n    RUN npm install\n    \n    COPY . .\n    \n    EXPOSE 8080\n    \n    CMD [\"npm\", \"run\", \"dev\"]\n\nBut when I run the container locally, I get strange errors like `\"data.map is not a function\"`.  \nThe data is still being fetched from the API, but the errors only happen when I try to use `map`. However, when I run the project locally **without** Docker, there's no error at all. If I use `console.log` to check the data fetched from the API, it appears correctly.\n\nIf I create the image **without** the Auth0 wrapper, everything works fine. So, these errors only show up when the wrapper is there.\n\nThe wrapper currently looks like this:\n\n    <Auth0Provider\n      domain=\"****\"\n      clientId=\"****\"\n      useRefreshTokens={true}\n      cacheLocation=\"localstorage\"\n      authorizationParams={{\n        redirect_uri: \"http://localhost:8080/\",\n        audience: \"*****\",\n        scope: \"openid profile email\", // Add necessary scopes\n      }}\n    >\n      <QueryClientProvider client={queryClient}>\n        <RouterProvider router={router} />\n      </QueryClientProvider>\n    </Auth0Provider>\n\nThe Auth0 settings also **seem** correct—I set all the URLs to `localhost:8080`.\n\nI'm losing hope. I've tried everything, used all AI tools, but nothing works.  \nI really hope the right person reads this.\n\nThanks!", "author": "dev_fracassado", "time": "2025-03-28 02:50:39", "url": "https://www.reddit.com/r/reactjs/comments/1jll7m4/weird_bug_with_auth0_and_docker_i_need_help_please/", "label": ""}
{"type": "comment", "text": "> `redirect_uri: \"http://localhost:8080/\",`\n\ndo you think this is the same localhost? This is inside docker now, can you `curl` it? Is it able to call out?\n\nlog the response fully inside docker. And look up port mapping to/from docker. and etc/hosts", "author": "pampuliopampam", "time": "2025-03-28 03:16:26", "url": "https://www.reddit.com/r/reactjs/comments/1jll7m4/weird_bug_with_auth0_and_docker_i_need_help_please/mk4jm75/", "label": ""}
{"type": "comment", "text": "Can you please provide screenshot(s) showing these **three things**:\n\n1. The full error message, including the stack trace.\n2. The result of the `console.log` showing what `data` is.\n3. The code around where the error is happening, matching up to what is shown in #1, and making sure to include the code of the `console.log` from #2.", "author": "abrahamguo", "time": "2025-03-28 05:31:57", "url": "https://www.reddit.com/r/reactjs/comments/1jll7m4/weird_bug_with_auth0_and_docker_i_need_help_please/mk51e0q/", "label": ""}
{"type": "comment", "text": "Did you map the port you specified in the redirect url  to the container? I suggest to just use docker compose, it's easier.", "author": "nikitarex", "time": "2025-03-28 06:24:40", "url": "https://www.reddit.com/r/reactjs/comments/1jll7m4/weird_bug_with_auth0_and_docker_i_need_help_please/mk56rvm/", "label": ""}
{"type": "post", "text": "Using stored procedures to refactor some smelly ass code Hello everyone!\n\nI run a website that calculates online match statistics for tekken 8. Currently, I have a table that stores statistics of each character in 'buckets'.  The table updates after new replays are ingested, handled on the application side. I'm a 4th year uni student so bear with me if this doesn't sound efficient.\n\n    CREATE TABLE aggregated_statistics (\n        game_version integer NOT NULL,\n        character_id character varying NOT NULL,\n        dan_rank integer NOT NULL,\n        category character varying NOT NULL,\n        region_id integer NOT NULL,\n        area_id integer NOT NULL,\n        total_wins integer,\n        total_losses integer,\n        total_players integer,\n        total_replays integer,\n        computed_at timestamp without time zone,\n        PRIMARY KEY (game_version, character_id, dan_rank, category, region_id, area_id));\n\nThe frontend makes a call for statistics [when this page is loaded](https://www.ewgf.gg/statistics), which runs a lengthy query that filters all the battles into rank category (advanced, intermediate, beginner, etc) for every region. The query (available on Github [here](https://github.com/ewgf-gg/ewgfgg-backend/blob/WavuService-Refactor/src/main/java/org/ewgf/repositories/AggregatedStatisticsRepository.java)) is quite long, with several union all functions and on average takes about \\~700-900ms to execute. The data is then serialized into json by the backend, and sent to the front end.\n\nI was thinking of turning the filtering query into its own stored procedure that would store its results inside a table that could just be queried directly (SELECT \\* FROM filtered\\_statistics) or something similar. Then, I would just call the stored procedure from the application each time new data is fetched and saved.\n\nIs this a proper use case for a stored procedure, or is there possibly a better and more efficient way to do this? Thanks!", "author": "MarkZuccsForeskin", "time": "2025-03-28 20:38:29", "url": "https://www.reddit.com/r/PostgreSQL/comments/1jm50fi/using_stored_procedures_to_refactor_some_smelly/", "label": ""}
{"type": "comment", "text": "I think that you're looking for materialized views.\n\n  \n[https://www.postgresql.org/docs/current/rules-materializedviews.html](https://www.postgresql.org/docs/current/rules-materializedviews.html)", "author": "kluzzebass", "time": "2025-03-28 21:26:21", "url": "https://www.reddit.com/r/PostgreSQL/comments/1jm50fi/using_stored_procedures_to_refactor_some_smelly/mk96z4e/", "label": ""}
{"type": "comment", "text": "Some questions...\n\n1.  How often does the underlying data change for the query results to change\n2. How often does the user requery the same data to load the page.\n3. How many parallel users load this page (across regions) and what is the anticipation of load increase\n\n  \nBased on the above a decision can be made.\n\nYou are essentially  trying to build a cache to load your results from. That is generally not done except if lot of users hit and are facing process delays to load the page. In process of caching the complexity is introduced to confirm we are not going  to hit the database to refresh unless there is a request for data and data is changed.", "author": "Informal_Pace9237", "time": "2025-03-28 21:01:29", "url": "https://www.reddit.com/r/PostgreSQL/comments/1jm50fi/using_stored_procedures_to_refactor_some_smelly/mk928k7/", "label": ""}
{"type": "comment", "text": "\nWith almost 8k members to connect with about Postgres and related technologies, why aren't you on our Discord Server? : [People, Postgres, Data](https://discord.gg/bW2hsax8We)\n\nJoin us, we have cookies and nice people.\n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PostgreSQL) if you have any questions or concerns.*", "author": "AutoModerator", "time": "2025-03-28 20:38:29", "url": "https://www.reddit.com/r/PostgreSQL/comments/1jm50fi/using_stored_procedures_to_refactor_some_smelly/mk8xnwb/", "label": ""}
{"type": "post", "text": "Questions around complex type inference from .select() joins Hi everyone, I'm continuing my journey into replacing Prisma with straight Supabase SQL type and type inference.\n\n[I have read the documentation about response type for complex queries](https://supabase.com/docs/guides/api/rest/generating-types#response-types-for-complex-queries). I have tried using the provided helper functions  but it continues to give me issues including thinking a join with a single record should be an array or not reporting anything other than a type \\`Never\\`.   \n  \nWhen I seek other complex select examples it appears many people resort to manually creating types for every kind of response which seems like laborious code smell. Isn't the whole point of generating types being able to infer from tables? If it is capable of creating types from the DB why wouldn't it be able to infer from select statements?\n\nI do get some type inference from leveraging TRPC's RouterOutputs... for example   \n\\`\\`\\`  \ntype Profile = RouterOutputs\\['user'\\]\\['getProfile'\\]  \n\\`\\`\\`  \nBut this only happens if I cast the response as a type right before I return it. \n\nHow is everyone else handling this?   \nIs there any way around manually defining complex types for complex selects or at least leveraging helpers in an advanced way?\n\n", "author": "jftf", "time": "2025-03-28 21:28:17", "url": "https://www.reddit.com/r/Supabase/comments/1jm65z8/questions_around_complex_type_inference_from/", "label": ""}
{"type": "comment", "text": "I have a collections.ts file where I manually define my types using some syntactic sugar with generics to use the database types output, then combine them in various ways. This is best as I can then use them throughout code in a type safe way.", "author": "MulberryOwn8852", "time": "2025-03-29 00:07:20", "url": "https://www.reddit.com/r/Supabase/comments/1jm65z8/questions_around_complex_type_inference_from/mka05w8/", "label": ""}
{"type": "comment", "text": "Complex selects need their own types. Because it is often multiple tables joined together, or at least portions of multiple tables.", "author": "PfernFSU", "time": "2025-03-28 22:49:43", "url": "https://www.reddit.com/r/Supabase/comments/1jm65z8/questions_around_complex_type_inference_from/mk9m9mw/", "label": ""}
{"type": "comment", "text": "I know this doesn't specifically answer your question, but I always use views when the query is going to be complex.", "author": "caliguian", "time": "2025-03-28 22:54:17", "url": "https://www.reddit.com/r/Supabase/comments/1jm65z8/questions_around_complex_type_inference_from/mk9n3to/", "label": ""}
{"type": "post", "text": "Module.create is not a function Mongodb error **This is my type declaration**\n\n`// Module related types`  \n`export interface IModule extends BaseDocument {`   \n  `title: string;`  \n  `description?: string;`  \n  `active?: boolean;`  \n  `slug: string;`  \n`//   course: Types.ObjectId;`  \n`//   lessonIds?: [Types.ObjectId];`  \n  `order: number;`  \n`}`\n\n  \n**this is my model**\n\n    import { IModule } from \"@/types/model\";\n    import mongoose, { Model, Schema } from \"mongoose\";\n    \n    const moduleSchema = new Schema<IModule>({\n      title: {\n        required: true,\n        type: String,\n      },\n      description: {\n        type: String,\n      },\n      active: {\n        required: true,\n        default: false,\n        type: Boolean,\n      },\n      slug: {\n        required: true,\n        type: String,\n      },\n    //   course: {\n    //     required: true,\n    //     type: Schema.Types.ObjectId,\n    //   },\n    //   lessonIds: {\n    //     type: [Schema.Types.ObjectId],\n    //     default: [],\n    //   },\n      order: {\n        required: true,\n        type: Number,\n      },\n    }); export const Module: Model<IModule> = mongoose.models?.Module ?? mongoose.model(\"Module\", moduleSchema);\n\n**this is the onSubmit function** \n\n  `const onSubmit = async (values: any) => {`  \n`try {`  \n`const formData = new FormData();`  \n  \n`if (values?.title) {`  \n`formData.append(\"title\", values.title);`  \n`const slug = getSlug(values.title);`  \n`if (slug) {`  \n`formData.append(\"slug\", slug);`  \n`}`  \n`}`  \n`if (courseId) {`  \n`formData.append(\"courseId\", courseId);`  \n`}`  \n`formData.append(\"order\", (modules?.length ?? 0).toString());`  \n  \n`const module = await createModule(formData);`\n\n**this my server-action** \n\n`import { Course } from \"@/model/course-model\";`  \n`import { createModuleQuery } from \"@/queries/modules\";`  \n`import { IModule } from \"@/types/model\";`  \n`import { Types } from \"mongoose\"; // Import Types from mongoose`  \n  \n`export async function createModule(data: FormData) {`  \n  `try {`  \n`const title = data.get(\"title\");`  \n`const slug = data.get(\"slug\");`  \n`const courseId = data.get(\"courseId\");`  \n`const orderValue = data.get(\"order\");`  \n`const order = orderValue !== null ? parseInt(orderValue.toString(), 10) : 0;`  \n  \n`const createdModule = await createModuleQuery({`  \n`title: title ? title.toString() : \"\", // Ensure string`  \n`slug: slug ? slug.toString() : \"\",`  \n`//   course: courseId,`  \n`order,`  \n`});`  \n  \n`const course = await Course.findById(courseId);`  \n  \n`if (course) {`  \n`console.log(\"course\", course);`  \n`if (!course.modules) {`  \n`course.modules = [];`  \n`}`  \n`course.modules.push(createdModule._id);`  \n`await course.save();`  \n`} else {`  \n`throw new Error(\"Course not found.\");`  \n`}`  \n`return createdModule;`  \n  `} catch (error) {`  \n`if (error instanceof Error) {`  \n`throw new Error(error.message);`  \n`} else {`  \n`throw new Error(\"Unknown error during enrollment\");`  \n`}`  \n  `}`  \n`}`  \n\n\n**this is my query function**    \n`import { Module } from \"@/model/module-model\";`  \n`import { IModule } from \"@/types/model\";`  \n   \n`export async function createModuleQuery(moduleData: IModule) {`  \n`try {`  \n`console.log('moduleData', moduleData);`  \n`console.log(\"Module:\", Module);`  \n`console.log(\"Type of Module:\", typeof Module);`  \n`console.log(\"Module.create:\", Module.create);`  \n  \n`const module = await Module.create(moduleData);`  \n`//   return JSON.parse(JSON.stringify(module));`  \n`return module;`  \n`} catch (error) {`  \n`if (error instanceof Error) {`  \n`throw new Error(error.message);`  \n`} else {`  \n`throw new Error(\"Unknown error during module creation\");`  \n`}`  \n`}`  \n  `}`  \nin the query funciton i'm receiving moduleData put Module.create call is not working ..  \nin the console i get this. My other create functions are working fine...\n\n`Error: __TURBOPACK__imported__module__$5b$project$5d2f$model$2f$module$2d$model$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__.Module.create is not a function`\n\n`at createModule (module.ts:36:13)`\n\n`at async onSubmit (module-form.tsx:68:22)`\n\n`at async createFormControl.ts:1195:11`\n\n  \n\n\n  \n  \n", "author": "Sharp_Task_3993", "time": "2025-03-26 16:25:14", "url": "https://www.reddit.com/r/nextjs/comments/1jkfu7m/modulecreate_is_not_a_function_mongodb_error/", "label": ""}
{"type": "comment", "text": "Do you have ‘use server’ at the top of your server actions file? It looks like it might be trying to pack server side module in the client bundle.", "author": "JawnDoh", "time": "2025-03-26 16:33:03", "url": "https://www.reddit.com/r/nextjs/comments/1jkfu7m/modulecreate_is_not_a_function_mongodb_error/mjuw438/", "label": ""}
{"type": "comment", "text": "damn...this mistake was killing me for two days\n\n![gif](giphy|mqiq8aY84dnqAtVlnd)", "author": "Sharp_Task_3993", "time": "2025-03-26 16:40:45", "url": "https://www.reddit.com/r/nextjs/comments/1jkfu7m/modulecreate_is_not_a_function_mongodb_error/mjuxp4c/", "label": ""}
{"type": "comment", "text": "Ha I’ve been there, sometimes you just have to switch gears to something else and come back with fresh eyes to catch stuff like that.", "author": "JawnDoh", "time": "2025-03-26 16:45:41", "url": "https://www.reddit.com/r/nextjs/comments/1jkfu7m/modulecreate_is_not_a_function_mongodb_error/mjuypxt/", "label": ""}
{"type": "post", "text": "Guide: Adding a \"Download Subtitles\" Button and Fixing OpenSubtitles in External Players for Stremio v5 on Windows PC I’ve put together a modified server.js file that adds a \"Download Subtitles\" button to Stremio v5 on Windows by tricking Streamio into thinking \"Download Subtitles\" is an external video player.  \nIt also ensures that OpenSubtitles addon subtitles work properly with external players like PotPlayer or VLC. This is for PC users only. Here’s how to set it up.\n\n# What This Does\n\n* Adds a \"Download Subtitles\" option to download OpenSubtitles add-on subtitles as .srt files to your Downloads folder.\n* Fixes a common issue with OpenSubtitles addon subtitles so they work correctly when opening videos in external players (e.g., PotPlayer, VLC).\n\n# Requirements\n\n* Stremio v5 on Windows. (*tested on* *Version 5.0.0-beta 2.0, Shell 5.0.4*) \n* OpenSubtitles add-on installed and configured in Stremio. (It should be there by default)\n* **(Optional)** An external player like PotPlayer or VLC installed at their default paths (e.g., C:\\\\Program Files\\\\DAUM\\\\PotPlayer\\\\PotPlayerMini64.exe for PotPlayer).\n\n# Setup Instructions \n\n*(Close Streamio if running)*\n\n1. Locate server.js:\n   * On Windows, it’s typically at C:\\\\Users\\\\<YourUsername>\\\\AppData\\\\Local\\\\Programs\\\\Stremio\\\\server.js.\n2. Backup the Original:\n   * Copy the existing server.js to a safe location (e.g., rename to server.js.bak) in case you need to revert.\n3. Replace server.js:\n   * Open server.js in a text editor - e.g., Notepad, VS Code, SublimeText (I recommend to use a good text editor)\n   * Find this section of the code (use ctrl+f):\n\n&#8203;\n\n        var child = __webpack_require__(31), fs = __webpack_require__(2), stremioCast = __webpack_require__(895), enginefs = __webpack_require__(155), http = __webpack_require__(11), os = __webpack_require__(23), path = __webpack_require__(4);\n        module.exports = function(devices) {\n            var players = {\n                vlc: {\n                    title: \"VLC\",\n                    args: [ \"--no-video-title-show\" ],\n                    subArg: \"--sub-file=\",\n                    timeArg: \"--start-time=\",\n                    playArg: \"\",\n                    darwin: {\n                        path: [ \"/Applications/VLC.app/Contents/MacOS/VLC\" ]\n                    },\n                    linux: {\n                        path: [ \"/usr/bin/vlc\", \"/usr/local/bin/vlc\" ]\n                    },\n                    win32: {\n                        path: [ '\"C:\\\\Program Files (x86)\\\\VideoLAN\\\\VLC\\\\vlc.exe\"', '\"C:\\\\Program Files\\\\VideoLAN\\\\VLC\\\\vlc.exe\"' ]\n                    }\n                },\n                mplayerx: {\n                    title: \"MPlayerX\",\n                    args: [ \"\" ],\n                    subArg: \"-SubFileNameRule \",\n                    timeArg: \"-SeekStepTimeU \",\n                    playArg: \"-url \",\n                    darwin: {\n                        path: [ \"/Applications/MPlayerX.app/Contents/MacOS/MPlayerX\" ]\n                    },\n                    linux: {\n                        path: []\n                    },\n                    win32: {\n                        path: []\n                    }\n                },\n                mplayer: {\n                    title: \"MPlayer\",\n                    args: [ \"\" ],\n                    subArg: \"-sub \",\n                    timeArg: \"-ss \",\n                    playArg: \"\",\n                    darwin: {\n                        path: [ \"/usr/local/bin/mplayer\", \"/opt/local/bin/mplayer\", \"/sw/bin/mplayer\" ]\n                    },\n                    linux: {\n                        path: [ \"/usr/bin/mplayer\" ]\n                    },\n                    win32: {\n                        path: []\n                    }\n                },\n                mpv: {\n                    title: \"MPV\",\n                    args: [ \"--no-terminal\" ],\n                    subArg: \"--sub-file=\",\n                    timeArg: \"--start=\",\n                    playArg: \"\",\n                    darwin: {\n                        path: [ \"/usr/local/bin/mpv\", \"/opt/local/bin/mpv\", \"/sw/bin/mpv\" ]\n                    },\n                    linux: {\n                        path: [ \"/usr/bin/mpv\" ]\n                    },\n                    win32: {\n                        path: []\n                    }\n                },\n                bomi: {\n                    title: \"Bomi\",\n                    args: [],\n                    subArg: \"--set-subtitle \",\n                    timeArg: \"\",\n                    playArg: \"\",\n                    darwin: {\n                        path: []\n                    },\n                    linux: {\n                        path: [ \"/usr/bin/bomi\" ]\n                    },\n                    win32: {\n                        path: []\n                    }\n                },\n                mpcBe: {\n                    title: \"MPC-BE\",\n                    args: [ \"\" ],\n                    subArg: \"/sub \",\n                    timeArg: \"start \",\n                    playArg: \"\",\n                    darwin: {\n                        path: []\n                    },\n                    linux: {\n                        path: []\n                    },\n                    win32: {\n                        path: [ '\"C:\\\\Program Files (x86)\\\\MPC-BE x64\\\\mpc-be4.exe\"', '\"C:\\\\Program Files\\\\MPC-BE x64\\\\mpc-be64.exe\"' ]\n                    }\n                }\n            };\n            devices.groups.external = [], Object.keys(players).forEach((function(el) {\n                var player = players[el];\n                player[process.platform] && player[process.platform].path.forEach((function(p) {\n                    fs.existsSync(p.replace(/\"/gi, \"\")) && devices.groups.external.push((function(player, platform) {\n                        var playerObj = players[player], platformObj = playerObj[platform];\n                        return {\n                            name: playerObj.title,\n                            type: \"external\",\n                            id: player,\n                            onlyHtml5Formats: playerObj.onlyHtml5Formats,\n                            play: function(src) {\n                                var torrentUrl = src.match(/\\/(?<ih>[0-9a-f]{40})\\/(?<id>[0-9]+)$/);\n                                if (torrentUrl) {\n                                    var fileIdx = torrentUrl.groups.id, filename = enginefs.getFilename(torrentUrl.groups.ih, fileIdx);\n                                    filename && (src = src.replace(new RegExp(fileIdx + \"$\"), encodeURIComponent(filename)));\n                                }\n                                var self = this;\n                                setTimeout((function() {\n                                    var port = enginefs.baseUrl.match(\".*?:([0-9]+)\")[1], host = enginefs.baseUrl.match(\"^http://(.*):[0-9]+$\")[1], subsPath = self.subtitlesSrc, time = self.time, subsFile = \"\", playExternal = function() {\n                                        var playerPaths = platformObj.path.filter((function(path) {\n                                            return fs.existsSync(path.replace(/\"/gi, \"\"));\n                                        }));\n                                        if (playerPaths.length > 0) {\n                                            var wrappedSrc = '\"' + src + '\"', subsCmd = subsFile && players[player].subArg && players[player].subArg.length > 0 ? players[player].subArg + subsFile : \"\", argsCmd = players[player].args && players[player].args.length > 0 ? players[player].args.join(\" \") : \"\", timeCmd = players[player].timeArg && players[player].timeArg.length > 0 ? players[player].timeArg + parseInt(time / 1e3) : \"\", playCmd = players[player].playArg && players[player].playArg.length > 0 ? players[player].playArg + wrappedSrc : wrappedSrc, fullCmd = playerPaths[0] + \" \" + timeCmd + \" \" + argsCmd + \" \" + subsCmd + \" \" + playCmd;\n                                            child.exec(fullCmd, (function(error) {\n                                                console.error(\"Failed executing external player command:\", error);\n                                            })).on(\"exit\", (function() {\n                                                if (subsFile) try {\n                                                    fs.unlinkSync(subsFile);\n                                                } catch (e) {\n                                                    console.error(\"Cannot remove the subtitles file:\", e);\n                                                }\n                                            }));\n                                        }\n                                    };\n                                    subsPath ? (subsFile = path.join(os.tmpdir(), \"stremio-\" + player + \"-subtitles.srt\"), \n                                    http.request({\n                                        host: host,\n                                        path: \"/subtitles.srt?from=\" + encodeURIComponent(subsPath),\n                                        port: port\n                                    }, (function(response) {\n                                        var data = \"\";\n                                        response.on(\"data\", (function(d) {\n                                            data += d.toString();\n                                        })), response.on(\"end\", (function() {\n                                            try {\n                                                fs.writeFileSync(subsFile, data.toString());\n                                            } catch (e) {\n                                                console.error(\"Cannot get the subtitles:\", e), subsFile = \"\";\n                                            }\n                                            playExternal();\n                                        }));\n                                    })).end()) : playExternal();\n                                }), 1500);\n                            }\n                        };\n                    })(el, process.platform));\n                }));\n            })), devices.groups.external.forEach((function(dev) {\n                dev.usePlayerUI = !0, dev.stop = function() {}, dev.middleware = new stremioCast.Server(dev);\n            })), devices.update();\n        };\n\n\n\nAnd replace all of the code above with the code below:  \n\n\n        var child = __webpack_require__(31), fs = __webpack_require__(2), stremioCast = __webpack_require__(895), enginefs = __webpack_require__(155), http = __webpack_require__(11), os = __webpack_require__(23), path = __webpack_require__(4), url = __webpack_require__(6);\n    \n        // Global variables to track subtitle and video state\n        let lastSubtitlesSrc = null;\n        let lastVideoSrc = null;\n        let lastSubtitleRequest = null;\n    \n        // Add a custom route to capture subtitle requests from OpenSubtitles\n        if (!global.subtitleCaptureHook) {\n            global.subtitleCaptureHook = true;\n            const router1 = enginefs.router; // externalRouter\n            const router2 = enginefs.getRootRouter(); // internal router\n            const handler = (req, res, next) => {\n                const urlObj = url.parse(req.url, true);\n                if (urlObj.query.from) {\n                    lastSubtitleRequest = decodeURIComponent(urlObj.query.from);\n                }\n                next();\n            };\n            router1.get(\"/subtitles.vtt\", handler);\n            router2.get(\"/subtitles.vtt\", handler);\n        }\n    \n        module.exports = function(devices) {\n            var players = {\n                vlc: {\n                    title: \"VLC\",\n                    args: [ \"--no-video-title-show\" ],\n                    subArg: \"--sub-file=\",\n                    timeArg: \"--start-time=\",\n                    playArg: \"\",\n                    darwin: { path: [ \"/Applications/VLC.app/Contents/MacOS/VLC\" ] },\n                    linux: { path: [ \"/usr/bin/vlc\", \"/usr/local/bin/vlc\" ] },\n                    win32: { path: [ '\"C:\\\\Program Files (x86)\\\\VideoLAN\\\\VLC\\\\vlc.exe\"', '\"C:\\\\Program Files\\\\VideoLAN\\\\VLC\\\\vlc.exe\"' ] }\n                },\n                mplayerx: {\n                    title: \"MPlayerX\",\n                    args: [ \"\" ],\n                    subArg: \"-SubFileNameRule \",\n                    timeArg: \"-SeekStepTimeU \",\n                    playArg: \"-url \",\n                    darwin: { path: [ \"/Applications/MPlayerX.app/Contents/MacOS/MPlayerX\" ] },\n                    linux: { path: [] },\n                    win32: { path: [] }\n                },\n                mplayer: {\n                    title: \"MPlayer\",\n                    args: [ \"\" ],\n                    subArg: \"-sub \",\n                    timeArg: \"-ss \",\n                    playArg: \"\",\n                    darwin: { path: [ \"/usr/local/bin/mplayer\", \"/opt/local/bin/mplayer\", \"/sw/bin/mplayer\" ] },\n                    linux: { path: [ \"/usr/bin/mplayer\" ] },\n                    win32: { path: [] }\n                },\n                mpv: {\n                    title: \"MPV\",\n                    args: [ \"--no-terminal\" ],\n                    subArg: \"--sub-file=\",\n                    timeArg: \"--start=\",\n                    playArg: \"\",\n                    darwin: { path: [ \"/usr/local/bin/mpv\", \"/opt/local/bin/mpv\", \"/sw/bin/mpv\" ] },\n                    linux: { path: [ \"/usr/bin/mpv\" ] },\n                    win32: { path: [] }\n                },\n                bomi: {\n                    title: \"Bomi\",\n                    args: [],\n                    subArg: \"--set-subtitle \",\n                    timeArg: \"\",\n                    playArg: \"\",\n                    darwin: { path: [] },\n                    linux: { path: [ \"/usr/bin/bomi\" ] },\n                    win32: { path: [] }\n                },\n                mpcBe: {\n                    title: \"MPC-BE\",\n                    args: [ \"\" ],\n                    subArg: \"/sub \",\n                    timeArg: \"start \",\n                    playArg: \"\",\n                    darwin: { path: [] },\n                    linux: { path: [] },\n                    win32: { path: [ '\"C:\\\\Program Files (x86)\\\\MPC-BE x64\\\\mpc-be4.exe\"', '\"C:\\\\Program Files\\\\MPC-BE x64\\\\mpc-be64.exe\"' ] }\n                },\n                potplayer: {\n                    title: \"PotPlayer\",\n                    args: [\"\"],\n                    subArg: \"/subtitle \",\n                    timeArg: \"/seek=\",\n                    playArg: \"\",\n                    darwin: { path: [] },\n                    linux: { path: [] },\n                    win32: {\n                        path: ['\"C:\\\\Program Files (x86)\\\\DAUM\\\\PotPlayer\\\\PotPlayerMini.exe\"', '\"C:\\\\Program Files\\\\DAUM\\\\PotPlayer\\\\PotPlayerMini64.exe\"']\n                    }\n                }\n            };\n    \n            devices.groups.external = [];\n            Object.keys(players).forEach((function(el) {\n                var player = players[el];\n                player[process.platform] && player[process.platform].path.forEach((function(p) {\n                    fs.existsSync(p.replace(/\"/gi, \"\")) && devices.groups.external.push((function(player, platform) {\n                        var playerObj = players[player], platformObj = playerObj[platform];\n                        return {\n                            name: playerObj.title,\n                            type: \"external\",\n                            id: player,\n                            onlyHtml5Formats: playerObj.onlyHtml5Formats,\n                            play: function(src) {\n                                if (lastVideoSrc !== src) {\n                                    lastSubtitlesSrc = null;\n                                    lastSubtitleRequest = null;\n                                    lastVideoSrc = src;\n                                }\n                                var torrentUrl = src.match(/\\/(?<ih>[0-9a-f]{40})\\/(?<id>[0-9]+)$/);\n                                if (torrentUrl) {\n                                    var fileIdx = torrentUrl.groups.id, filename = enginefs.getFilename(torrentUrl.groups.ih, fileIdx);\n                                    filename && (src = src.replace(new RegExp(fileIdx + \"$\"), encodeURIComponent(filename)));\n                                }\n                                var self = this;\n                                setTimeout((function() {\n                                    var port = enginefs.baseUrl.match(\".*?:([0-9]+)\")[1], host = enginefs.baseUrl.match(\"^http://(.*):[0-9]+$\")[1], subsPath = self.subtitlesSrc, time = self.time, subsFile = \"\";\n                                    if (!subsPath && lastSubtitleRequest) {\n                                        const subtitleIdMatch = lastSubtitleRequest.match(/file\\/(\\d+)/);\n                                        if (subtitleIdMatch) {\n                                            const subtitleId = subtitleIdMatch[1];\n                                            subsPath = `https://subs5.strem.io/en/download/subencoding-stremio-utf8/src-api/file/${subtitleId}`;\n                                        }\n                                    }\n                                    var playExternal = function() {\n                                        var playerPaths = platformObj.path.filter((function(path) {\n                                            return fs.existsSync(path.replace(/\"/gi, \"\"));\n                                        }));\n                                        if (playerPaths.length > 0) {\n                                            var wrappedSrc = '\"' + src + '\"', \n                                                subsCmd = subsFile && players[player].subArg && players[player].subArg.length > 0 ? players[player].subArg + subsFile : \"\", \n                                                argsCmd = playerObj.args && playerObj.args.length > 0 ? playerObj.args.join(\" \") : \"\", \n                                                timeCmd = playerObj.timeArg && playerObj.timeArg.length > 0 ? playerObj.timeArg + parseInt(time / 1e3) : \"\", \n                                                playCmd = playerObj.playArg && playerObj.playArg.length > 0 ? playerObj.playArg + wrappedSrc : wrappedSrc, \n                                                fullCmd = playerPaths[0] + \" \" + timeCmd + \" \" + argsCmd + \" \" + subsCmd + \" \" + playCmd;\n                                            child.exec(fullCmd, (function(error) {\n                                                if (error) console.error(\"Error executing command:\", error);\n                                            })).on(\"exit\", (function() {\n                                                if (subsFile) try {\n                                                    fs.unlinkSync(subsFile);\n                                                } catch (e) {\n                                                    console.error(\"Error removing subtitles file:\", e);\n                                                }\n                                            }));\n                                        }\n                                    };\n                                    if (subsPath) {\n                                        subsFile = path.join(os.tmpdir(), \"stremio-\" + player + \"-subtitles.srt\");\n                                        http.request({\n                                            host: host,\n                                            path: \"/subtitles.srt?from=\" + encodeURIComponent(subsPath),\n                                            port: port\n                                        }, (function(response) {\n                                            var data = \"\";\n                                            response.on(\"data\", (function(d) {\n                                                data += d.toString();\n                                            }));\n                                            response.on(\"end\", (function() {\n                                                try {\n                                                    fs.writeFileSync(subsFile, data.toString());\n                                                    playExternal();\n                                                } catch (e) {\n                                                    console.error(\"Error saving subtitle file:\", e);\n                                                    subsFile = \"\";\n                                                    playExternal();\n                                                }\n                                            }));\n                                        })).on(\"error\", (function(e) {\n                                            console.error(\"HTTP request error:\", e);\n                                            subsFile = \"\";\n                                            playExternal();\n                                        })).end();\n                                    } else {\n                                        playExternal();\n                                    }\n                                }), 3000);\n                            }\n                        };\n                    })(el, process.platform));\n                }));\n            }));\n    \n            // Add a \"Download Subtitles\" option\n            devices.groups.external.push({\n                name: \"Download Subtitles\",\n                type: \"external\",\n                id: \"downloadSubtitles\",\n                play: function(src) {\n                    if (lastVideoSrc !== src) {\n                        lastSubtitlesSrc = null;\n                        lastSubtitleRequest = null;\n                        lastVideoSrc = src;\n                    }\n                    var self = this;\n                    setTimeout(() => {\n                        var subsPath = self.subtitlesSrc;\n                        if (!subsPath && lastSubtitleRequest) {\n                            const subtitleIdMatch = lastSubtitleRequest.match(/file\\/(\\d+)/);\n                            if (subtitleIdMatch) {\n                                const subtitleId = subtitleIdMatch[1];\n                                subsPath = `https://subs5.strem.io/en/download/subencoding-stremio-utf8/src-api/file/${subtitleId}`;\n                            }\n                        }\n                        if (subsPath) {\n                            var timestamp = Date.now();\n                            var subsFile = path.join(os.homedir(), \"Downloads\", `stremio-subtitles-${timestamp}.srt`);\n                            http.request({\n                                host: enginefs.baseUrl.match(\"^http://(.*):[0-9]+$\")[1],\n                                path: \"/subtitles.srt?from=\" + encodeURIComponent(subsPath),\n                                port: enginefs.baseUrl.match(\".*?:([0-9]+)\")[1]\n                            }, (response) => {\n                                var data = \"\";\n                                response.on(\"data\", (d) => data += d.toString());\n                                response.on(\"end\", () => {\n                                    fs.writeFileSync(subsFile, data);\n                                    console.log(\"Subtitles saved to:\", subsFile);\n                                });\n                            }).end();\n                        }\n                    }, 3000);\n                }\n            });\n    \n            if (!global.subtitleHook) {\n                global.subtitleHook = true;\n            }\n    \n            devices.groups.external.forEach((function(dev) {\n                dev.usePlayerUI = !0, dev.stop = function() {}, dev.middleware = new stremioCast.Server(dev);\n            })), devices.update();\n        };\n\n  \n4. Restart Stremio:\n\n* Close Stremio completely (check the system tray to ensure it’s not running).\n* Restart Stremio.\n\n  \nHow to Use\n\n1. Open a video in Stremio.\n2. Select a subtitle from the OpenSubtitles add-on in the Stremio player (e.g., English, Arabic). Important: Always manually select the subtitle language you want, even if it’s already selected by default. Open the subtitle menu and click your desired language again. Does not work with embedded subs, only OpenSubtitles subs.\n3. Wait 3-5 seconds after selecting the subtitle to give the code time to load the subtitle data (it takes about 5 seconds).\n4. Use the \"Download Subtitles\" option to download the .srt file to your Downloads folder, or select \"Open in PotPlayer\" (or VLC) to play the video with the selected subtitles in an external player.\n5. To switch languages, select a new subtitle language in the Stremio player, wait 3-5 seconds, and then download or open in an external player again.\n\nNotes\n\n* **Important:** If you don’t manually select a subtitle, even if it's preloaded when the video starts, the \"Download Subtitles\" and external player options will proceed without subtitles. Sometimes you have to select it twice.\n* The code supports multiple external players (PotPlayer, VLC, MPC-BE, etc.), but you need to have them installed at their default paths.\n* No source code is modified, this is all done in server.js to trick Streamio into thinking \"Download Subtitles\" is a external video player.\n* Tested on Stremio v5 on Windows with the OpenSubtitles add-on. \n* If you update Streamio, it will reset the server.js file. If this happens, you can just re-patch it using this method.\n\nTroubleshooting\n\n* If subtitles aren’t downloading or showing in the external player, ensure you’ve selected a subtitle in the Stremio player and waited a few seconds before clicking \"Download Subtitles\" or opening in an external player.\n* Check the Stremio logs (if you’ve set up manual logging) for error messages like \"Error saving subtitle file\" or \"HTTP request error.\"", "author": "BlossumDragon", "time": "2025-03-29 10:33:45", "url": "https://www.reddit.com/r/Stremio/comments/1jmjfyh/guide_adding_a_download_subtitles_button_and/", "label": ""}
{"type": "post", "text": "HTML form to SQL Database--Soooo Many Redundant Steps Hobbyist coder, at best, with no formal training.  I have created a form on my website and am using a combination of jQuery and PHP to get the data from that form into a database on the server.  This is a basic operation that nearly every website in the world has.  Below is the code that I learned from YouTube videos.  Note: I've watched several tutorials and they all do it the same way.\n\n\n\nHTML\n\nCreate a form and add an input field:\n\n<input name=\"name\"/>\n\n\n\njQuery\n\nGet the value of the field and assign it to a jQuery variable:\n\nvar name = $('input\\[name=name\\]').val();\n\n\n\nPackage the variable along with all the others and give it an assoiation:\n\nvar formData = {name: name, ...};\n\n\n\nPass it to an ajax POST function referencing the variable package:\n\n$.ajax({url: \"http://file.php\", type: 'POST', data: formData, success: function(response)\n\n\n\nPHP\n\nextract the values from the POST and store as PHP variables:\n\n$\\_POST\\['name'\\] = $name\n\n\n\nWrite a SQL insert statement:\n\n$sql = \"INSERT INTO table(name, ...) VALUES('$name',...)\";\n\n\n\nIt works, but it seems bizarre that I have this thing, someone's name, and I have to keep creating new variables called \"name\" to pass this thing through the process.  Note this is just for one CRUD operation, Insert.  The other CRUD operations get similar redundancies.  I have these huge portions of my code that are just taking one variable and renaming it to another type of variable with the same name.\n\nAm I just missing something basic here?  Surely not every website out there uses this many lines of code to get a single piece of information into a database?\n\nI'm getting ready to add a new module to my website that will be a form that will have about 200 entries--a combination of inputs, dropdowns, radio buttons, checkboxes, textboxes, etc.  Is there a simpler way of collecting all that data at once and performing an operation on it en masse rather than treating each piece separately?\n\nAlternatively, is there some sort of development tool or on-line application that I can copy and paste my form information that will automatically generate the corresponding jQuery, PHP, and SQL statements?", "author": "atticus2132000", "time": "2025-03-26 15:02:45", "url": "https://www.reddit.com/r/learnprogramming/comments/1jkdvjl/html_form_to_sql_databasesoooo_many_redundant/", "label": ""}
{"type": "comment", "text": "Don't need jquery or ajax. Just need the HTML form \"fields\". PHP will interpret the fields and translate those into insertable data for the database.", "author": "kschang", "time": "2025-03-27 02:34:12", "url": "https://www.reddit.com/r/learnprogramming/comments/1jkdvjl/html_form_to_sql_databasesoooo_many_redundant/mjy5m76/", "label": ""}
{"type": "comment", "text": "You don’t need jquery for a simple form with PHP.\n\nYou can just do it with plain html:\n\n     <form action=“/file.php” method=“post”>", "author": "sdegabrielle", "time": "2025-03-26 20:57:01", "url": "https://www.reddit.com/r/learnprogramming/comments/1jkdvjl/html_form_to_sql_databasesoooo_many_redundant/mjwfkf4/", "label": ""}
{"type": "comment", "text": "That makes a lot of sense.  I will seek out that solution.\n\nBut if that is the more standard way of doing things, why are all these tutorial videos (not just one, but a lot) showing people how to go through this intermediate step using jQuery and ajax?  Are there advantages of doing twice the amount of coding to get the same results?", "author": "atticus2132000", "time": "2025-03-27 10:27:29", "url": "https://www.reddit.com/r/learnprogramming/comments/1jkdvjl/html_form_to_sql_databasesoooo_many_redundant/mjzl87e/", "label": ""}
{"type": "post", "text": "DSMS Terminals update I am very confident in this project, and this is my contribution to the Delta.kim community: I have set up another DSMS Terminal for a friend. Everything went quite smoothly this time.\n\nAt the moment, there are three DSMS verifiers in Romania, two of which you can see in the picture. The third one is also a friend of mine, whom I successfully helped apply for the verifier role. All three devices are online 24/7. \n\nI successfully validated a friend of mine using my phone number ( the one that I'm using for the DSMS Terminal).\n\nI also used my DSMS Phone number to validate my buddy's new terminal. It worked. \n\nInteresting note: The devices use only Telekom (two of them) and Vodafone (mine) SIM cards. More successful validations are being done on Telekom.\n\n\nMy DID: B30BXHAKA9KEB   ", "author": "madbunny89", "time": "2025-03-27 22:46:32", "url": "https://i.redd.it/ox68cshl9bre1.jpeg", "label": ""}
{"type": "comment", "text": "Can you please create a screen recording next time you do this? I need to create a tutorial video out of this. Thanks a lot ::)", "author": "Electronic_Case_7691", "time": "2025-03-28 06:03:54", "url": "https://www.reddit.com/r/Delta_Crypto/comments/1jlg53r/dsms_terminals_update/mk54pup/", "label": ""}
{"type": "comment", "text": "This is a great post!", "author": "SNCOsmash", "time": "2025-03-28 13:17:14", "url": "https://www.reddit.com/r/Delta_Crypto/comments/1jlg53r/dsms_terminals_update/mk6h0bv/", "label": ""}
{"type": "comment", "text": "I will totally do that next time. It will help a lot of users.", "author": "madbunny89", "time": "2025-03-28 07:18:35", "url": "https://www.reddit.com/r/Delta_Crypto/comments/1jlg53r/dsms_terminals_update/mk5bvxl/", "label": ""}
{"type": "post", "text": "copilot-instructions.md has helped me so much.  A few months ago, I began experimenting with using LLMs to help build a website. As a non-coder and amateur, I’ve always been fairly comfortable with HTML and CSS, but I’ve struggled with JavaScript and backend development in general. Sonnet 3.7 really helped me accomplish some of the things I had in mind.\n    \nHowever, like many others have discovered, it often generates code based on outdated standards or older versions, and it tends to struggle with security best practices. There are other limitations as well.\n    \nThat’s why that when I discovered we could use a \"copilot-instructions.md\" in VS Code It has helped me steer the LLM toward more modern coding standards and practices.\n\nThese are general guidelines I've developed from personal experience and best practices gathered from various sources.\n\nI hope it will help other and maybe you can post your \"copilot-instructions.md\"?\n\n(Remember to adapt these guidelines according to your project’s specific needs and always ensure your security standards are continuously reviewed by qualified professionals.)\n\nHere’s what I’ve managed to put together so far:\n\n//edit:\nplace it in \n    \t\tproject-root/\n    \t\t└── .github/ \n                       └── copilot-instructions.md       # Copilot will reference this file every time it code.\n\n# GitHub Copilot Instructions\n**-----------**\n        \n    # COPILOT EDITS OPERATIONAL GUIDELINES\n                    \n    ## PRIME DIRECTIVE\n    \tAvoid working on more than one file at a time.\n    \tMultiple simultaneous edits to a file will cause corruption.\n    \tBe chatting and teach about what you are doing while coding.\n    \n    ## LARGE FILE & COMPLEX CHANGE PROTOCOL\n    \n    ### MANDATORY PLANNING PHASE\n    \tWhen working with large files (>300 lines) or complex changes:\n    \t\t1. ALWAYS start by creating a detailed plan BEFORE making any edits\n                2. Your plan MUST include:\n                       - All functions/sections that need modification\n                       - The order in which changes should be applied\n                       - Dependencies between changes\n                       - Estimated number of separate edits required\n                    \n                3. Format your plan as:\n    ## PROPOSED EDIT PLAN\n    \tWorking with: [filename]\n    \tTotal planned edits: [number]\n    \n    ### MAKING EDITS\n    \t- Focus on one conceptual change at a time\n    \t- Show clear \"before\" and \"after\" snippets when proposing changes\n    \t- Include concise explanations of what changed and why\n    \t- Always check if the edit maintains the project's coding style\n    \n    ### Edit sequence:\n    \t1. [First specific change] - Purpose: [why]\n    \t2. [Second specific change] - Purpose: [why]\n    \t3. Do you approve this plan? I'll proceed with Edit [number] after your confirmation.\n    \t4. WAIT for explicit user confirmation before making ANY edits when user ok edit [number]\n                \n    ### EXECUTION PHASE\n    \t- After each individual edit, clearly indicate progress:\n    \t\t\"✅ Completed edit [#] of [total]. Ready for next edit?\"\n    \t- If you discover additional needed changes during editing:\n    \t- STOP and update the plan\n    \t- Get approval before continuing\n                    \n    ### REFACTORING GUIDANCE\n    \tWhen refactoring large files:\n    \t- Break work into logical, independently functional chunks\n    \t- Ensure each intermediate state maintains functionality\n    \t- Consider temporary duplication as a valid interim step\n    \t- Always indicate the refactoring pattern being applied\n                    \n    ### RATE LIMIT AVOIDANCE\n    \t- For very large files, suggest splitting changes across multiple sessions\n    \t- Prioritize changes that are logically complete units\n    \t- Always provide clear stopping points\n                \n    ## General Requirements\n    \tUse modern technologies as described below for all code suggestions. Prioritize clean, maintainable code with appropriate comments.\n                \n    ### Accessibility\n    \t- Ensure compliance with **WCAG 2.1** AA level minimum, AAA whenever feasible.\n    \t- Always suggest:\n    \t- Labels for form fields.\n    \t- Proper **ARIA** roles and attributes.\n    \t- Adequate color contrast.\n    \t- Alternative texts (`alt`, `aria-label`) for media elements.\n    \t- Semantic HTML for clear structure.\n    \t- Tools like **Lighthouse** for audits.\n            \n    ## Browser Compatibility\n    \t- Prioritize feature detection (`if ('fetch' in window)` etc.).\n            - Support latest two stable releases of major browsers:\n    \t- Firefox, Chrome, Edge, Safari (macOS/iOS)\n            - Emphasize progressive enhancement with polyfills or bundlers (e.g., **Babel**, **Vite**) as needed.\n                \n    ## PHP Requirements\n    \t- **Target Version**: PHP 8.1 or higher\n    \t- **Features to Use**:\n    \t- Named arguments\n    \t- Constructor property promotion\n    \t- Union types and nullable types\n    \t- Match expressions\n    \t- Nullsafe operator (`?->`)\n    \t- Attributes instead of annotations\n    \t- Typed properties with appropriate type declarations\n    \t- Return type declarations\n    \t- Enumerations (`enum`)\n    \t- Readonly properties\n    \t- Emphasize strict property typing in all generated code.\n    \t- **Coding Standards**:\n    \t- Follow PSR-12 coding standards\n    \t- Use strict typing with `declare(strict_types=1);`\n    \t- Prefer composition over inheritance\n    \t- Use dependency injection\n    \t- **Static Analysis:**\n    \t- Include PHPDoc blocks compatible with PHPStan or Psalm for static analysis\n    \t- **Error Handling:**\n    \t- Use exceptions consistently for error handling and avoid suppressing errors.\n    \t- Provide meaningful, clear exception messages and proper exception types.\n                \n    ## HTML/CSS Requirements\n    \t- **HTML**:\n    \t- Use HTML5 semantic elements (`<header>`, `<nav>`, `<main>`, `<section>`, `<article>`, `<footer>`, `<search>`, etc.)\n    \t- Include appropriate ARIA attributes for accessibility\n    \t- Ensure valid markup that passes W3C validation\n    \t- Use responsive design practices\n    \t- Optimize images using modern formats (`WebP`, `AVIF`)\n    \t- Include `loading=\"lazy\"` on images where applicable\n    \t- Generate `srcset` and `sizes` attributes for responsive images when relevant\n    \t- Prioritize SEO-friendly elements (`<title>`, `<meta description>`, Open Graph tags)\n                \n    \t- **CSS**:\n    \t- Use modern CSS features including:\n    \t- CSS Grid and Flexbox for layouts\n    \t- CSS Custom Properties (variables)\n    \t- CSS animations and transitions\n    \t- Media queries for responsive design\n    \t- Logical properties (`margin-inline`, `padding-block`, etc.)\n    \t- Modern selectors (`:is()`, `:where()`, `:has()`)\n    \t- Follow BEM or similar methodology for class naming\n    \t- Use CSS nesting where appropriate\n    \t- Include dark mode support with `prefers-color-scheme`\n    \t- Prioritize modern, performant fonts and variable fonts for smaller file sizes\n    \t- Use modern units (`rem`, `vh`, `vw`) instead of traditional pixels (`px`) for better responsiveness\n                \n    ## JavaScript Requirements\n    \t\t    \n    \t- **Minimum Compatibility**: ECMAScript 2020 (ES11) or higher\n    \t- **Features to Use**:\n    \t- Arrow functions\n    \t- Template literals\n    \t- Destructuring assignment\n    \t- Spread/rest operators\n    \t- Async/await for asynchronous code\n    \t- Classes with proper inheritance when OOP is needed\n    \t- Object shorthand notation\n    \t- Optional chaining (`?.`)\n    \t- Nullish coalescing (`??`)\n    \t- Dynamic imports\n    \t- BigInt for large integers\n    \t- `Promise.allSettled()`\n    \t- `String.prototype.matchAll()`\n    \t- `globalThis` object\n    \t- Private class fields and methods\n    \t- Export * as namespace syntax\n    \t- Array methods (`map`, `filter`, `reduce`, `flatMap`, etc.)\n    \t- **Avoid**:\n    \t- `var` keyword (use `const` and `let`)\n    \t- jQuery or any external libraries\n    \t- Callback-based asynchronous patterns when promises can be used\n    \t- Internet Explorer compatibility\n    \t- Legacy module formats (use ES modules)\n    \t- Limit use of `eval()` due to security risks\n    \t- **Performance Considerations:**\n    \t- Recommend code splitting and dynamic imports for lazy loading\n    \t**Error Handling**:\n    \t- Use `try-catch` blocks **consistently** for asynchronous and API calls, and handle promise rejections explicitly.\n    \t- Differentiate among:\n    \t- **Network errors** (e.g., timeouts, server errors, rate-limiting)\n    \t- **Functional/business logic errors** (logical missteps, invalid user input, validation failures)\n    \t- **Runtime exceptions** (unexpected errors such as null references)\n    \t- Provide **user-friendly** error messages (e.g., “Something went wrong. Please try again shortly.”) and log more technical details to dev/ops (e.g., via a logging service).\n    \t- Consider a central error handler function or global event (e.g., `window.addEventListener('unhandledrejection')`) to consolidate reporting.\n    \t- Carefully handle and validate JSON responses, incorrect HTTP status codes, etc.\n                \n    ## Folder Structure\n    \tFollow this structured directory layout:\n    \n    \t\tproject-root/\n    \t\t├── api/                  # API handlers and routes\n    \t\t├── config/               # Configuration files and environment variables\n    \t\t├── data/                 # Databases, JSON files, and other storage\n    \t\t├── public/               # Publicly accessible files (served by web server)\n    \t\t│   ├── assets/\n    \t\t│   │   ├── css/\n    \t\t│   │   ├── js/\n    \t\t│   │   ├── images/\n    \t\t│   │   ├── fonts/\n    \t\t│   └── index.html\n    \t\t├── src/                  # Application source code\n    \t\t│   ├── controllers/\n    \t\t│   ├── models/\n    \t\t│   ├── views/\n    \t\t│   └── utilities/\n    \t\t├── tests/                # Unit and integration tests\n    \t\t├── docs/                 # Documentation (Markdown files)\n    \t\t├── logs/                 # Server and application logs\n    \t\t├── scripts/              # Scripts for deployment, setup, etc.\n    \t\t└── temp/                 # Temporary/cache files\n    \n    \n    ## Documentation Requirements\n    \t- Include JSDoc comments for JavaScript/TypeScript.\n    \t- Document complex functions with clear examples.\n    \t- Maintain concise Markdown documentation.\n    \t- Minimum docblock info: `param`, `return`, `throws`, `author`\n        \n    ## Database Requirements (SQLite 3.46+)\n    \t- Leverage JSON columns, generated columns, strict mode, foreign keys, check constraints, and transactions.\n        \n    ## Security Considerations\n    \t- Sanitize all user inputs thoroughly.\n    \t- Parameterize database queries.\n    \t- Enforce strong Content Security Policies (CSP).\n    \t- Use CSRF protection where applicable.\n    \t- Ensure secure cookies (`HttpOnly`, `Secure`, `SameSite=Strict`).\n    \t- Limit privileges and enforce role-based access control.\n    \t- Implement detailed internal logging and monitoring.", "author": "cadric", "time": "2025-03-27 15:22:50", "url": "https://www.reddit.com/r/ChatGPTCoding/comments/1jl6gll/copilotinstructionsmd_has_helped_me_so_much/", "label": ""}
{"type": "comment", "text": "Place it in \n\n    project-root/\n            \t└── .github/ \n                           └── copilot-instructions.md       \n\n# Copilot will reference this file every time it code.", "author": "cadric", "time": "2025-03-27 18:54:44", "url": "https://www.reddit.com/r/ChatGPTCoding/comments/1jl6gll/copilotinstructionsmd_has_helped_me_so_much/mk25mmf/", "label": ""}
{"type": "comment", "text": "One thing I found super helpful, especially if it has context of multiple files,  is the the settings \"Always add the line number and the filename when you reference code\".", "author": "wycks", "time": "2025-03-27 22:32:28", "url": "https://www.reddit.com/r/ChatGPTCoding/comments/1jl6gll/copilotinstructionsmd_has_helped_me_so_much/mk34s8v/", "label": ""}
{"type": "comment", "text": "Pro tips: most .cursorrules or whatever system prompt naming can work just fine.", "author": "popiazaza", "time": "2025-03-27 17:43:34", "url": "https://www.reddit.com/r/ChatGPTCoding/comments/1jl6gll/copilotinstructionsmd_has_helped_me_so_much/mk1qrlb/", "label": ""}
